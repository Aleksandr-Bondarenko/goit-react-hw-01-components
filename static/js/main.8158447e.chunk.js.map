{"version":3,"sources":["components/profile/Profile.module.css","components/statistics/Statistics.module.css","components/friend-item/FriendItem.module.css","components/transaction-history/TransactionHistory.module.css","components/friend-list/FriendList.module.css","components/profile/defaultImg.png","components/profile/Profile.js","js/valueGenerator.js","components/statistics/Statistics.js","components/friend-item/FriendItem.js","components/friend-list/FriendList.js","components/transaction-history/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","stats","avatar","defaultAvatar","className","s","box","userBox","src","alt","userAvatar","width","userName","userTag","userLocation","statsBox","statsName","statsValue","followers","views","likes","toGenerateValue","Math","round","random","Statistics","title","statSection","statTitle","statList","map","id","label","percentage","randomColor","statItem","style","backgroundColor","statName","statValue","FriendItem","statusClass","isOnline","onlineStatus","offlineStatus","item","FriendList","friends","friendList","TransactionHistory","items","table","head","type","amount","currency","bodyRow","bodyData","App","user","statisticalData","friendsData","transactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8158447e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Profile_box__14hi8\",\"userBox\":\"Profile_userBox__1GqTu\",\"userAvatar\":\"Profile_userAvatar__3bSkn\",\"userName\":\"Profile_userName__qBOrP\",\"userTag\":\"Profile_userTag__2KtsD\",\"userLocation\":\"Profile_userLocation__2KfFs\",\"statsBox\":\"Profile_statsBox__2Zj4O\",\"statsName\":\"Profile_statsName__1cktm\",\"statsValue\":\"Profile_statsValue__1gsuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statSection\":\"Statistics_statSection__3NCrC\",\"statTitle\":\"Statistics_statTitle__xoxmT\",\"statList\":\"Statistics_statList__2U2zi\",\"statItem\":\"Statistics_statItem__2Lbu0\",\"statName\":\"Statistics_statName__1sjUP\",\"statValue\":\"Statistics_statValue__1Ho9L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendItem_item__1DoaZ\",\"avatar\":\"FriendItem_avatar__b6y5W\",\"name\":\"FriendItem_name__19YLe\",\"onlineStatus\":\"FriendItem_onlineStatus__2rWHX\",\"offlineStatus\":\"FriendItem_offlineStatus__2DA74 FriendItem_onlineStatus__2rWHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__14VYM\",\"head\":\"TransactionHistory_head__1oqkP\",\"bodyRow\":\"TransactionHistory_bodyRow__3DQ-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1HLmJ\"};","export default __webpack_public_path__ + \"static/media/defaultImg.7ffcf71e.png\";","import PropTypes from 'prop-types';\nimport defaultAvatar from './defaultImg.png';\nimport s from './Profile.module.css';\n\nexport default function Profile({\n  name = 'NONAME',\n  tag,\n  location,\n  stats,\n  avatar = defaultAvatar,\n}) {\n  return (\n    <div className={s.box}>\n      <div className={s.userBox}>\n        <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className={s.userAvatar}\n          width=\"120\"\n        />\n        <p className={s.userName}>{name}</p>\n        <p className={s.userTag}>@{tag}</p>\n        <p className={s.userLocation}>{location}</p>\n      </div>\n      <ul className={s.statsBox}>\n        <li>\n          <span className={s.statsName}>Followers</span>\n          <span className={s.statsValue}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.statsName}>Views</span>\n          <span className={s.statsValue}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.statsName}>Likes</span>\n          <span className={s.statsValue}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\n  avatar: PropTypes.string.isRequired,\n};\n","function toGenerateValue() {\n  const value = Math.round(Math.random() * 255);\n  return value;\n}\n\nexport default toGenerateValue;\n","import PropTypes from 'prop-types';\nimport toGenerateValue from '../../js/valueGenerator';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ stats, title }) {\n  return (\n    <section className={s.statSection}>\n      {title && <h2 className={s.statTitle}>Upload stats</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => {\n          const randomColor = `rgb(${toGenerateValue()},${toGenerateValue()},${toGenerateValue()})`;\n          return (\n            <li\n              className={s.statItem}\n              style={{ backgroundColor: randomColor }}\n              key={id}\n            >\n              <span className={s.statName}>{label}</span>\n              <span className={s.statValue}>{percentage}&#37;</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './FriendItem.module.css';\n\nexport default function FriendItem({ name, avatar, isOnline }) {\n  const statusClass = isOnline ? s.onlineStatus : s.offlineStatus;\n  return (\n    <li className={s.item}>\n      <span className={statusClass}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FriendItem from '../friend-item/FriendItem';\nimport s from './FriendList.module.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ id, name, isOnline, avatar }) => {\n        return (\n          <FriendItem\n            key={id}\n            name={name}\n            isOnline={isOnline}\n            avatar={avatar}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={s.table}>\n      <thead className={s.head}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      {items.map(({ id, type, amount, currency }) => {\n        return (\n          <tbody className={s.bodyRow} key={id}>\n            <tr>\n              <td className={s.bodyData}>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          </tbody>\n        );\n      })}\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import './App.css';\nimport Profile from './components/profile/Profile';\nimport Statistics from './components/statistics/Statistics';\nimport FriendList from './components/friend-list/FriendList';\nimport TransactionHistory from './components/transaction-history/TransactionHistory';\nimport user from './components/profile/user';\nimport statisticalData from './components/statistics/statistical-data';\nimport friendsData from './components/friend-list/friends';\nimport transactionData from './components/transaction-history/transactions';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      {/* <Statistics stats={statisticalData} title=\"Upload stats\" /> */}\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friendsData} />\n\n      <TransactionHistory items={transactionData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}